<?php

/**
 * @file
 * Contains nidirect_landing_pages.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_ENTITY_TYPE_form_alter().
 */
function unity_landing_pages_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === 'layout_builder_add_block' || $form_id === 'layout_builder_update_block') {

    // Add process callback that will allow us to alter block form element rendering.
    if (!empty($form['settings']['block_form'])) {
      $form['settings']['block_form']['#process'][] = '_unity_landing_pages_block_form_alter';
    }

    // Depending on block name, set the title and hide it or prevent authors hiding it.
    if (!empty($form['settings']['block_form']['#block'])) {
      $block_name = $form['settings']['block_form']['#block']->bundle();
      switch ($block_name) {
        case 'banner_deep':
        case 'card_contact':
        case 'card_deck_plain':
        case 'video':
        case 'text':
          // The title defaults to the block type name and is not displayed.
          $form['settings']['label']['#default_value'] = $block_name;
          $form['settings']['label']['#type'] = 'hidden';
          $form['settings']['label_display']['#default_value'] = FALSE;
          $form['settings']['label_display']['#access'] = FALSE;
          break;

        case 'card_standard':
        case 'card_wide':
        case 'card_plain':
          // The title must be displayed.
          $form['settings']['label_display']['#default_value'] = TRUE;
          $form['settings']['label_display']['#access'] = FALSE;
          break;

      }
    }
  }

  // Hide the listing fields as they may now only be edited in layout builder.
  if (($form_id == 'node_landing_page_form') || ($form_id == 'node_landing_page_edit_form')) {
    $form['field_manually_control_listing']['#access'] = FALSE;
    $form['field_listing']['#access'] = FALSE;
  }
}

/**
 * Process callback for landing page custom block forms.
 */
function _unity_landing_pages_block_form_alter(array $element, FormStateInterface $form_state) {

  if (!empty($element['#block']) && $element['#block']->bundle() === 'card_contact') {
    // Remove container-inline class from the telephone plus fieldsets.
    if (!empty($element['field_telephone']) && !empty($element['field_telephone']['widget'])) {
      $classes = &$element['field_telephone']['widget'][0]['#attributes']['class'];
      $classes = array_filter($classes, function ($e) {
        return $e != 'container-inline';
      });
    }
  }

  // Change teaser fields to a textarea.
  if (!empty($element['field_teaser']) && !empty($element['field_teaser']['widget'])) {
    $element['field_teaser']['widget'][0]['value']['#type'] = 'textarea';
    $element['field_teaser']['widget'][0]['value']['#attributes']['rows'] = 3;
    $element['field_teaser']['widget'][0]['value']['#attributes']['cols'] = 60;
  }

  return $element;
}

/**
 * Implements hook_preprocess_page().
 */
function unity_landing_pages_preprocess_page(&$variables) {
  // Add custom CSS to the initial layout builder page.
  if (\Drupal::routeMatch()->getRouteName() == 'layout_builder.overrides.node.view') {
    $variables['#attached']['library'][] = 'unity_landing_pages/landing_page_admin';
    $variables['#attached']['library'][] = 'unity_landing_pages/layout_builder';
  }
}

/**
 * Implements hook_preprocess_node().
 * Add the Layout builder styles to the landing page content type.
 */
function unity_landing_pages_preprocess_node(&$variables) {
   if ($variables['node']->bundle() === 'landing_page') {
     $variables['#attached']['library'][] = 'unity_landing_pages/layout_builder';
   }
}
